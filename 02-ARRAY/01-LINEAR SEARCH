 [WORST TIME COMPLEXITY O(N) = WHEN ELEMENT IS NOT FOUND ]
 [BEST TIME COMPLEXITY 0(1)  =  ELEMENT IS AT FIRST POSITION ]
LINEAR SEARCH LOGIC :
1. ITERATE FROM 0 TO END OF ARRAY
2. CHECK IF TARGET IS EQUALS TO EACH INDEX ELEMENT
3. IF TARGET FOUND THEN RETURN THE INDEX OR ELEMENT 


QUE1 : LINEAR SEARCH IN ARRAY 
------------------------------
class Solution { 
    static int search(int arr[], int x) {
        for (int i=0; i<arr.length; i++)     //for (int i : arr) //for every element in arr
        {
          if (arr[i] == x)                   // if (i == x)
              return i;                      //return i (means element)
        }
        return -1;
    }
}
================================
QUE2 : LINEAR SEARCH IN STRING
--------------------------------
class Solution {
    static boolean search(String str, int x) {
        for (int i=0; i<str.length(); i++)
        {
          if (x == str.charAt[i])
              return true;
        }
        return false;
    }
}
================================
QUE 3: SEARCH IN A RANGE FORM INDEX 3 TILL 6
--------------------------------
class Solution { 
    static int search(int arr[], int x) {
        for (int i=3; i<=6; i++)     //for (int i : arr) //for every element in arr
        {
          if (arr[i] == x)                   // if (i == x)
              return i;                      //return i (means element)
        }
        return -1;
    }
}
