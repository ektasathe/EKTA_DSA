https://www.geeksforgeeks.org/problems/factorial5739/1
FACTORIAL OF A NO : the product of that number with every whole number less than or equal to 'n' till 1.

EXPLAINATION 
5! = 5 * 4 * 3 * 2 * 1
4! = 4 * 3 * 2 * 1
3! = 3 * 2 * 1
2! = 2 * 1
1! = 1
0! = 1 //there are no positive values less than zero so the data set cannot be arranged which counts as the possible combination of how data can be arranged

5! = 5 * 4!
         4! = 4 * 3!
                  3! = 3 * 2!
                           2! = 2 * 1!
                                    1! = 1
=================CODE FUNCTION =====================
class Solution {
    static int fact(int n) {
        // code here
        if (n<=1)
        {
            return 1 ;
        }
        return (n * fact(n-1) ); //*after return the brackets are imp */
    }
}
inp = 5 | op = 120
inp = 3 | op = 6


|            |
|------------|
| fact(1)    | ==> will return 1
|------------|
| fact(2)    |
|------------|
| fact(3)    |
|------------|
| main       | 
|____________|
 stack memory


|            |
|------------|
|            | 
|------------|
| fact(2)    | = 2* fact(1) = 2*1 = 2
|------------|
| fact(3)    |
|------------|
| main       | 
|____________|
 stack memory


|            |
|------------|
|            | 
|------------|
|            | 
|------------|
| fact(3)    | = 3 * fact(2) = 3 * 2 = 6
|------------|
| main       | 
|____________|
 stack memory


|------------|
|            | 
|------------|
|            | 
|------------|
|            | 
|------------|
| main       | will catch 6
|____________|
 stack memory

====================FULL CODE===================
public class Fact {
    public static void main(String[] args) {
        int ans = fact(5);
        System.out.println(ans);
    }

    static int fact(int n) {
        if (n <= 1) {
            return 1;
        }

        return n * fact(n-1);
    }
}
inp = 5 | op = 120
=======================================