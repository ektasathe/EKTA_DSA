
print nos from 5 4 3 2 1 || return type would be void
*** filling in stacks ***
class Main {
    public static void main(String[] args) {
        fun(5);
    }
    static void fun(int n)
    {
        if(n==0)
        {
            return;
        }
         System.out.print(n+" ");
        fun(n-1);
    }
}

op :
5 4 3 2 1

====================================================

print nos : 1 2 3 4 5  || return type would be void
*** removing from stacks ***

class Main {
    public static void main(String[] args) {
        fun(5);
    }
    static void fun(int n)
    {
        if(n==0)
        {
            return ;
        }
        
        fun(n-1);
        System.out.print(n+" ");
    }
}

op : 1 2 3 4 5 

====================================================
print nos : 5 4 3 2 1 1 2 3 4 5 || return type would be void

class Main {
    public static void main(String[] args) {
        fun(5);
    }
    static void fun(int n)
    {
        if(n==0)
        {
            return ;
        }
        System.out.print(n+" ");
        fun(n-1);
        System.out.print(n+" ");
    }
}

op : 5 4 3 2 1 1 2 3 4 5 



====================================================
MERGIGN ALL FUNCTIONS TOGETHER IN ONE CODE

class Main {
    public static void main(String[] args) {
        fun(5);
        funrev(5);
        funboth(5);
    }
    static void fun(int n)
    {
        if(n==0)
        {
            return ;
        }
        System.out.print(n+" ");
        fun(n-1);
        System.out.print(n+" ");
    }
    static void funrev(int n)
    {
        if(n==0)
        {
            return ;
        }
        System.out.print(n+" ");
        funrev(n-1);
        System.out.print(n+" ");
    }
    static void funboth(int n)
    {
        if(n==0)
        {
            return ;
        }
        System.out.print(n+" ");
        funboth(n-1);
        System.out.print(n+" ");
    }
}

op : 
5 4 3 2 1 1 2 3 4 5 5 4 3 2 1 1 2 3 4 5 5 4 3 2 1 1 2 3 4 5 
