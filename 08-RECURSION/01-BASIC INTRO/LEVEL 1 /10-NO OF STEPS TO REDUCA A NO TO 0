

https://leetcode.com/problems/number-of-steps-to-reduce-a-number-to-zero/description/

Input: num = 14
Output: 6
Explanation: 
Step 1) 14 is even; divide by 2 and obtain 7. 
Step 2) 7 is odd; subtract 1 and obtain 6.
Step 3) 6 is even; divide by 2 and obtain 3. 
Step 4) 3 is odd; subtract 1 and obtain 2. 
Step 5) 2 is even; divide by 2 and obtain 1. 
Step 6) 1 is odd; subtract 1 and obtain 0.


class Solution {
    // Public method that calculates the number of steps to reduce 'num' to zero
    public int numberOfSteps(int num) {
      return helper(num, 0);
    }
    private int helper(int num, int count)
    {
        if(num == 0)
        {
            return count;
        }
        // Recursive case: If the number is even, divide by 2 and increment steps
        if(num%2 == 0)
        {
            return helper(num/2, count+1);
        }
        // Recursive case: If the number is odd, subtract 1 and increment steps
        else
        {
            return helper(num-1, count+1);
        }
    }
}
