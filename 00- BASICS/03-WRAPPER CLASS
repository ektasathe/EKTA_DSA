https://www.w3schools.com/java/java_wrapper_classes.asp

Java Wrapper Classes
Wrapper classes provide a way to use primitive data types (int, boolean, etc..) as objects.

Primitive Data Type	 |    Wrapper Class
-------------------------------------------
byte	               |      Byte
short	               |      Short
int                  |      Integer
long                 |      Long
float	               |      Float
double               |      Double
boolean	             |      Boolean
char	               |      Character

Sometimes you must use wrapper classes, for example when working with Collection objects, 
such as ArrayList, where primitive types cannot be used (the list can only store objects):

ArrayList<int> myNumbers = new ArrayList<int>(); // INVALID//
ArrayList<Integer> myNumbers = new ArrayList<Integer>(); // VALID

EG :
import java.util.ArrayList;
public class Main { 
  public static void main(String[] args) { 
    ArrayList<Integer> myNumbers = new ArrayList<Integer>();
    myNumbers.add(10);
    myNumbers.add(15);
    myNumbers.add(20);
    myNumbers.add(25);
    for (int i : myNumbers) {
      System.out.println(i);
    }
  } 
}


How to create Wrapper Objects ?
To create a wrapper object, use the wrapper class instead of the primitive type. 
To get the value, you can just print the object:

public class Main {
  public static void main(String[] args) {
    Integer myInt = 5;
    Double myDouble = 5.99;
    Character myChar = 'A';
    System.out.println(myInt);
    System.out.println(myDouble);
    System.out.println(myChar);
  }
}



